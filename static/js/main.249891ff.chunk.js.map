{"version":3,"sources":["components/SelectOptions.jsx","components/GridInfo.jsx","components/ButtonLayout.jsx","components/GridLayout.jsx","App.js","serviceWorker.js","index.js"],"names":["SelectOptions","selectedColor","getSelectedColor","value","onChange","GridInfo","rows","cols","className","style","fontWeight","fontSize","ButtonLayout","state","props","this","addRow","addCol","removeRow","removeCol","resetGrid","fillAll","fillUncolored","clearGrid","colorBox","onClick","id","backgroundColor","nextProps","prevState","Component","GridLayout","colorMultiple","onMouseRelease","onMouseDown","Array","from","e","i","key","onMouseOver","onMouseUp","f","j","App","newRows","setState","newCols","grid","ReactDOM","findDOMNode","myRef","current","childNodes","console","log","event","persist","target","filled","mouseReleased","mouseDown","React","createRef","ref","Boolean","window","location","hostname","match","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.249891ff.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SelectOptions = ({ selectedColor, getSelectedColor }) => {\r\n  return (\r\n    <select value={selectedColor} onChange={getSelectedColor}>\r\n      <option value=\"green\">green</option>\r\n      <option value=\"red\">red</option>\r\n      <option value=\"blue\">blue</option>\r\n      <option value=\"purple\">purple</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SelectOptions;\r\n","import React from \"react\";\r\n\r\nconst GridInfo = ({ rows, cols }) => {\r\n  return (\r\n    <div className=\"dimension\">\r\n      <p style={{ fontWeight: 900, fontSize: 14 }}>Row Size {rows}</p>\r\n      <p style={{ fontWeight: 900, fontSize: 14 }}>Column Size {cols}</p>\r\n      <p style={{ fontWeight: 900, fontSize: 14 }}>\r\n        Total Squares {cols * rows}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridInfo;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/ButtonLayout.css\";\r\nimport SelectOptions from \"./SelectOptions\";\r\nimport GridInfo from \"./GridInfo\";\r\n\r\nclass ButtonLayout extends Component {\r\n  state = { rows: this.props.rows, cols: this.props.cols };\r\n\r\n  //listen for props update in app\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      prevState.rows !== nextProps.rows ||\r\n      prevState.cols !== nextProps.cols\r\n    ) {\r\n      return {\r\n        rows: nextProps.rows,\r\n        cols: nextProps.cols,\r\n      };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //destructure props for ease of use\r\n    const {\r\n      addRow,\r\n      addCol,\r\n      removeRow,\r\n      removeCol,\r\n      resetGrid,\r\n      fillAll,\r\n      fillUncolored,\r\n      clearGrid,\r\n      colorBox,\r\n      getSelectedColor,\r\n      selectedColor,\r\n    } = this.props;\r\n\r\n    const { rows, cols } = this.state;\r\n    var gridExists = rows;\r\n    return (\r\n      <div className=\"container\">\r\n        <button className=\"btn-sm btn-primary m-2\" onClick={addRow}>\r\n          Add Row\r\n        </button>\r\n        <button className=\"btn-sm btn-primary m-2\" onClick={addCol}>\r\n          Add Column\r\n        </button>\r\n        <button className=\"btn-sm btn-primary m-2\" onClick={removeRow}>\r\n          Remove Row\r\n        </button>\r\n        <button className=\"btn-sm btn-primary m-1\" onClick={removeCol}>\r\n          Remove Column\r\n        </button>\r\n        {(rows > 0) & (cols > 0) ? (\r\n          <div className=\"grid view btn\" id=\"gv-btn\">\r\n            <button className=\"btn-sm  m-2\" onClick={fillAll}>\r\n              Fill All\r\n            </button>\r\n            <button className=\"btn-sm btn-primary m-2\" onClick={fillUncolored}>\r\n              Fill Uncolored\r\n            </button>\r\n            <button className=\"btn-sm btn-primary m-2\" onClick={clearGrid}>\r\n              Clear\r\n            </button>\r\n            <button\r\n              className=\"btn-sm btn-primary m-2\"\r\n              style={{ backgroundColor: \"red\" }}\r\n              onClick={resetGrid}\r\n            >\r\n              Reset Grid\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        <SelectOptions\r\n          selectedColor={selectedColor}\r\n          getSelectedColor={getSelectedColor}\r\n        />\r\n        <GridInfo rows={rows} cols={cols} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonLayout;\r\n","import React from \"react\";\r\nimport \"../css/GridLayout.css\";\r\n\r\nconst GridLayout = ({\r\n  rows,\r\n  cols,\r\n  colorBox,\r\n  colorMultiple,\r\n  onMouseRelease,\r\n  onMouseDown,\r\n}) => {\r\n  return (rows > 0) & (cols > 0) ? (\r\n    <div className=\"container\" id=\"grid\">\r\n      {Array.from(Array(rows), (e, i) => {\r\n        return (\r\n          <div\r\n            className=\"row\"\r\n            key={i}\r\n            onMouseOver={(e) => colorMultiple(e)}\r\n            onMouseUp={(e) => onMouseRelease(e)}\r\n            onMouseDown={(e) => onMouseDown(e)}\r\n          >\r\n            {Array.from(Array(cols), (f, j) => {\r\n              return (\r\n                <div\r\n                  className=\"col\"\r\n                  key={j}\r\n                  onClick={(e) => colorBox(e)}\r\n                  onMouseOver={(e) => colorMultiple(e)}\r\n                  onMouseUp={(e) => onMouseRelease(e)}\r\n                  onMouseDown={(e) => onMouseDown(e)}\r\n                ></div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default GridLayout;\r\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ButtonLayout from \"./components/ButtonLayout\";\nimport GridLayout from \"./components/GridLayout\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: 0,\n      cols: 0,\n      selectedColor: \"green\",\n      mouseReleased: true,\n      mouseDown: false,\n    };\n\n    this.myRef = React.createRef();\n  }\n\n  //add row function\n  addRow = () => {\n    const { rows, cols } = this.state;\n    var newRows = rows + 1;\n\n    if (cols === 0) {\n      this.setState({\n        rows: newRows,\n        cols: cols + 1,\n      });\n    } else {\n      this.setState({\n        rows: newRows,\n      });\n    }\n  };\n\n  //add column function\n  addCol = () => {\n    const { rows, cols } = this.state;\n    var newCols = cols + 1;\n\n    if (rows === 0) {\n      this.setState({\n        cols: newCols,\n        rows: rows + 1,\n      });\n    } else {\n      this.setState({\n        cols: newCols,\n      });\n    }\n  };\n\n  //remove row function\n  removeRow = () => {\n    var newRows = this.state.rows - 1;\n    this.setState({\n      rows: newRows < 0 ? 0 : newRows,\n    });\n  };\n\n  //remove column function\n  removeCol = () => {\n    var newCols = this.state.cols - 1;\n    this.setState({\n      cols: newCols < 0 ? 0 : newCols,\n    });\n  };\n\n  resetGrid = () => {\n    this.setState({\n      rows: 0,\n      cols: 0,\n    });\n  };\n\n  //fill all boxes with selected color\n  fillAll = () => {\n    const { rows, cols, selectedColor } = this.state;\n    const grid = ReactDOM.findDOMNode(this.myRef.current).childNodes[1]\n      .childNodes;\n\n    console.log(\"children\", grid);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        grid[i].childNodes[j].style.backgroundColor = selectedColor;\n      }\n    }\n  };\n\n  //fill all boxes not with selected color\n  fillUncolored = () => {\n    const { rows, cols, selectedColor } = this.state;\n    const grid = ReactDOM.findDOMNode(this.myRef.current).childNodes[1]\n      .childNodes;\n\n    console.log(\"children\", grid);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        if (grid[i].childNodes[j].style.backgroundColor === \"\")\n          grid[i].childNodes[j].style.backgroundColor = selectedColor;\n      }\n    }\n  };\n\n  //clear all coloring\n  clearGrid = () => {\n    const { rows, cols } = this.state;\n    const grid = ReactDOM.findDOMNode(this.myRef.current).childNodes[1]\n      .childNodes;\n\n    console.log(\"children\", grid);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        grid[i].childNodes[j].style.backgroundColor = \"\";\n      }\n    }\n  };\n\n  //on each click get element, color in\n  colorBox = (event) => {\n    event.persist();\n    event.target.style.backgroundColor = this.state.selectedColor;\n    event.target.filled = \"true\";\n  };\n\n  onMouseRelease = (event) => {\n    this.setState({\n      mouseReleased: true,\n      mouseDown: false,\n    });\n  };\n\n  onMouseDown = (event) => {\n    this.setState({\n      mouseDown: true,\n      mouseReleased: false,\n    });\n    event.target.style.backgroundColor = this.state.selectedColor;\n  };\n\n  colorMultiple = (event) => {\n    if (this.state.mouseDown === true) {\n      event.target.style.backgroundColor = this.state.selectedColor;\n    }\n  };\n\n  //get selected color option and set to state\n  getSelectedColor = (e) => {\n    this.setState({\n      selectedColor: e.target.value,\n    });\n  };\n\n  render() {\n    const { rows, cols, selectedColor, mouseDown, mouseReleased } = this.state;\n    const {\n      addRow,\n      addCol,\n      removeRow,\n      removeCol,\n      resetGrid,\n      fillAll,\n      fillUncolored,\n      clearGrid,\n      colorBox,\n      onMouseRelease,\n      onMouseDown,\n      colorMultiple,\n      getSelectedColor,\n    } = this;\n    console.log(\"onmouseup\", mouseReleased);\n    console.log(\"onmousedown\", mouseDown);\n    return (\n      <div className=\"container\" ref={this.myRef}>\n        <ButtonLayout\n          addRow={addRow}\n          addCol={addCol}\n          removeRow={removeRow}\n          removeCol={removeCol}\n          resetGrid={resetGrid}\n          fillAll={fillAll}\n          fillUncolored={fillUncolored}\n          clearGrid={clearGrid}\n          getSelectedColor={getSelectedColor}\n          selectedColor={selectedColor}\n          rows={rows}\n          cols={cols}\n        />\n        <GridLayout\n          rows={rows}\n          cols={cols}\n          colorBox={colorBox}\n          colorMultiple={colorMultiple}\n          onMouseRelease={onMouseRelease}\n          onMouseDown={onMouseDown}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}